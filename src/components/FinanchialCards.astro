---
//@ts-nocheck
import financialProjections from "@data/financialProjections.json";
import Cal from "@icons/cal.svg";
import Card from "@icons/card.svg";
import Law from "@icons/law.svg"
import Money from "@icons/money.svg"
import LeftArrow from "@icons/arrow-left.svg"
import RightArrow from "@icons/arrow--right.svg"
import Services from "./Services.astro";

const iconMap = {
  cal: Cal,
  card: Card,
  law: Law,
  money: Money,
};
console.log(financialProjections);
---

<section class="full-span gray">
  <div>
    <div>
      <h2>{financialProjections.title}</h2>
      <p>{financialProjections.subtitle}</p>
    </div>
    <div>
      <LeftArrow/>
      <RightArrow/>
    </div>
</div>

<ul >
  {
    financialProjections.values.map((service) => {
      const Icon = iconMap[service.icon]; // Get the correct imported component
      return (
        <li class="card">
          {Icon && <Icon />}
          <h4>{service.title}</h4>
          <p>{service.description}</p>
        </li>
      );
    })
  }
</ul>
</section>
<style>
     @layer components {
section{
  >:first-child{
    display: flex;
    gap: 20vw;
    align-items: center;
     >:last-child{
    display: flex;
       gap: 26px;
    >*{   
       width: 70.465px;
height: 70.465px;}
border-radius:var(--svg-border-radius);
background-color: var( --color-primary-01);
 

  }
  }
  
}

  ul {
    --scroll-padding: max(1rem, 50% - var(--content-width)/ 2);
    list-style: none;
    display: flex;
    gap: var(--card-gap);
    scroll-snap-type: x mandatory;
  overflow-x: auto;
       padding-inline: var(--scroll-padding);
       scroll-padding-inline: var(--scroll-padding);
  padding: 20px 0;
  >:nth-child(2){
    background-color:var(--card-background-color-02);
    color: var(--card-text-color-02);
    :first-child{
      color: var(--color-primary-01);
    }
  }
  }
  li{
    display: flex;
    flex-direction: column;
  padding: var(--card-padding);
background-color:var(--card-background-color-01);
  flex-basis: 40%;
  flex-shrink: 0;
     scroll-snap-align: start;
  scroll-snap-stop: always;
  >*{
  color: var(--card-text-color);
  }
  }}
</style>